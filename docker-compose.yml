services:
  db:
    image: mysql:8.0
    container_name: sistema_de_pontos_db
    restart: unless-stopped
    env_file:
      - .env.docker
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    command: >
      --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci --innodb-buffer-pool-size=256M
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${DB_ROOT_PASSWORD:-root123}" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - app-network

  web:
    build: .
    container_name: sistema_de_pontos_web
    restart: unless-stopped
    volumes:
      - .:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    env_file:
      - .env.docker
    environment:
      - PYTHONPATH=/app/nextechlab
      - DJANGO_SETTINGS_MODULE=nextechlab.settings
    depends_on:
      db:
        condition: service_healthy
    command: >
      sh -c "
        echo 'Aguardando banco de dados...' &&
        python nextechlab/manage.py wait_for_db &&
        echo 'Executando migrações...' &&
        python nextechlab/manage.py migrate &&
        echo 'Coletando arquivos estáticos...' &&
        python nextechlab/manage.py collectstatic --noinput &&
        echo 'Criando superusuário se necessário...' &&
        python nextechlab/manage.py shell -c \"from django.contrib.auth import get_user_model; User = get_user_model(); User.objects.filter(username='admin').exists() or User.objects.create_superuser('admin','admin@localhost','admin123')\" &&
        echo 'Iniciando servidor...' &&
        gunicorn nextechlab.wsgi:application --bind 0.0.0.0:8000 --workers 2 --timeout 120 --max-requests 1000 --preload
      "
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:8000/admin/login/ || exit 1" ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    networks:
      - app-network

  nginx:
    image: nginx:alpine
    container_name: sistema_de_pontos_nginx
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - static_volume:/app/staticfiles:ro
      - media_volume:/app/media:ro
    depends_on:
      web:
        condition: service_healthy
    healthcheck:
      test: [ "CMD-SHELL", "wget --quiet --tries=1 --spider http://localhost/admin/login/ || exit 1" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    networks:
      - app-network

volumes:
  mysql_data:
    driver: local
  static_volume:
    driver: local
  media_volume:
    driver: local

networks:
  app-network:
    driver: bridge
    name: sistema_de_pontos_network
